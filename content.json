{"meta":{"title":"刘贝的博客","subtitle":"我是一名移动开发工程师","description":"刘贝的博客","author":"刘贝","url":"http://www.iccapp.com"},"pages":[{"title":"","date":"2016-09-01T01:19:31.000Z","updated":"2016-09-01T01:19:31.000Z","comments":false,"path":"tags/index.html","permalink":"http://www.iccapp.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"RXJava和RXAndroid使用案例分享","slug":"RXJava和RXAndroid使用案例分享","date":"2016-09-01T02:54:55.000Z","updated":"2016-09-01T02:57:30.000Z","comments":true,"path":"2016/09/01/RXJava和RXAndroid使用案例分享/","link":"","permalink":"http://www.iccapp.com/2016/09/01/RXJava和RXAndroid使用案例分享/","excerpt":"","text":"","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://www.iccapp.com/tags/android/"}],"keywords":[]},{"title":"手动编译kxmovie需要的ffmpeg","slug":"在kxmovie中集成手动编译的deFFmpeg","date":"2016-09-01T02:34:16.000Z","updated":"2016-09-01T02:55:14.000Z","comments":true,"path":"2016/09/01/在kxmovie中集成手动编译的deFFmpeg/","link":"","permalink":"http://www.iccapp.com/2016/09/01/在kxmovie中集成手动编译的deFFmpeg/","excerpt":"","text":"","categories":[],"tags":[{"name":"ios","slug":"ios","permalink":"http://www.iccapp.com/tags/ios/"}],"keywords":[]},{"title":"android内存泄漏笔记","slug":"android内存泄漏笔记","date":"2016-09-01T01:58:52.000Z","updated":"2016-09-01T02:55:11.000Z","comments":true,"path":"2016/09/01/android内存泄漏笔记/","link":"","permalink":"http://www.iccapp.com/2016/09/01/android内存泄漏笔记/","excerpt":"","text":"第三方库1https://github.com/square/leakcanary gradle 集成12345dependencies &#123; debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2' releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2' testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'&#125; In your Application class:1234567public class ExampleApplication extends Application &#123; @Override public void onCreate() &#123; super.onCreate(); LeakCanary.install(this); &#125;&#125; 说明下次编译安装好了apk后，会多出一个leak的应用，且每有一个项目集成了该库，就会有一个一样的leak应用出现在launch中，打开可以看到项目中，泄漏的部分。 实战Activity finish后，但是对他的引用还未结束最常见的是多线程的应用，简单来说，就是当在activity的生命周期内，发送了一个异步请求，当activity结束，该异步请求还未结束返回，但是对activity的context还是有引用，导致activity无法正常被回收。 解决方法：一般如Handle采用弱引用，或者在activity的onStop中，结束异步请求。 合理分配activity的context，即时释放对该context的引用。 Context leak in android.net.ConnectivityManager解决方法： 由 1ConnectivityManager cm = (ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE); 改成 1ConnectivityManager cm = (ConnectivityManager)context.getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE); 原因我猜测和上面的context的引用一样的情况。 Realm的不及时关闭解决方法： 在BaseActivity中定义12345678910111213141516private Realm realm;@Overrideprotected void onDestroy() &#123; super.onDestroy(); if (realm != null) &#123; realm.close(); &#125;&#125;public Realm getRealm() &#123; if (realm == null) &#123; realm = Realm.getDefaultInstance(); &#125; return realm;&#125; 在BaseFragment中定义 1234567891011121314151617181920212223private Realm realm;@Overridepublic void onPause() &#123; super.onPause(); if (realm != null)&#123; realm.close(); &#125;&#125;@Overridepublic void onResume() &#123; super.onResume(); if (realm == null)&#123; realm = Realm.getDefaultInstance(); &#125;&#125;public Realm getRealm() &#123; if (realm == null)&#123; realm = Realm.getDefaultInstance(); &#125; return realm;&#125; 未完待续。。。","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://www.iccapp.com/tags/android/"}],"keywords":[]},{"title":"Hexo 安装","slug":"hexo安装","date":"2016-09-01T00:58:39.000Z","updated":"2016-09-01T02:33:08.000Z","comments":true,"path":"2016/09/01/hexo安装/","link":"","permalink":"http://www.iccapp.com/2016/09/01/hexo安装/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}